import React, { useState } from 'react';
import Layout from '../components/layout/layout';
import MapIndex from '../components/map/map-index';
import TableIndex from '../components/table-index/table-index';
import { mapContainer, mainContainer, infoContainer } from './index.module.css';

export default function Index() {
  const [analyte, setAnalyte] = useState(null);
  const [region, setRegion] = useState(null);
  const [site, setSite] = useState(null);
  const [clustered, setClustered] = useState(false);

  const onChange = (event) => {
    const value = event.target.value;
    if (value === 'notClustered' && clustered === true) {
      setClustered(false);
    }
    if (value === 'clustered' && clustered === false) {
      setClustered(true);
    }
  };

  return (
    <Layout>
      <div className={mapContainer}>
        <MapIndex selectedAnalyte={analyte} selectedRegion={region} clickedSite={site} clustered={clustered} />
      </div>
      <div className={mainContainer}>
        <div className={infoContainer}>
          <p>The Surface Water Ambient Monitoring Program (SWAMP) mission is to generate  high quality, accessible, and usable data and information that is used to protect and restore California’s watersheds, and to inform California communities about local conditions of waterbodies monitored by SWAMP. To learn more about SWAMP and the work we do, check out our <a href="https://www.waterboards.ca.gov/water_issues/programs/swamp/" target="_blank" rel="noopener noreferrer">website</a>!</p>
          <p>This dashboard provides data generated by SWAMP for the time period of 2000-2021. Select a monitoring site from the map or explore the data by water quality parameter or region.</p>
          <h2>Explore SWAMP data</h2>
          <div>
            <input 
              type="radio" 
              name="mapMarker" 
              id="notClustered" 
              value="notClustered" 
              checked={clustered === false}
              onChange={onChange}
            />
            &nbsp;<label for="notClustered">Do not cluster map markers</label>
            <input 
              type="radio" 
              name="mapMarker" 
              id="clustered" 
              value="clustered"
              checked={clustered === true}
              onChange={onChange}
            />
            &nbsp;<label for="clustered">Cluster map markers</label>
          </div>
          {/* Table and Controls */}
          <div>
            {/*
            <TableIndex 
              selectedRegion={region} 
              setRegion={setRegion} 
              selectedAnalyte={analyte}
              setAnalyte={setAnalyte}
              setSite={setSite} />
            */}
          </div>
        </div>
        <div id="indexTableContainer" style={{ padding: '0 20px', marginBottom: '100px' }}></div>
      </div>
    </Layout>
  )
}
